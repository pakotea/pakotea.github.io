<!DOCTYPE html>
<html lang="zh">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>貪食蛇遊戲</title>
    <style>
        body {
            text-align: center;
            font-family: Arial, sans-serif;
            background-color: #E3E8EB;
        }
        canvas {
            border: 4px solid #333;
            background-color: #EFEFEF;
            border-radius: 10px;
            box-shadow: 0 4px 10px rgba(0, 0, 0, 0.2);
        }
        #score {
            font-size: 20px;
            margin: 10px;
        }
        button {
            margin-top: 10px;
            padding: 10px 20px;
            font-size: 16px;
            border: none;
            background-color: #28a745;
            color: white;
            cursor: pointer;
            border-radius: 5px;
        }
        button:hover {
            background-color: #218838;
        }
    </style>
</head>
<body>
    <h1>貪食蛇遊戲</h1>
    <p id="score">分數: 0</p>
    <canvas id="gameCanvas" width="400" height="400"></canvas>
    <br>
    <button onclick="restartGame()">重新開始</button>
    <script>
        const canvas = document.getElementById("gameCanvas");
        const ctx = canvas.getContext("2d");
        const gridSize = 20;
        let snake, direction, food, running, score;

        function initGame() {
            snake = [{ x: 200, y: 200 }];
            direction = "RIGHT";
            food = getRandomFoodPosition();
            running = true;
            score = 0;
            document.getElementById("score").innerText = "分數: " + score;
            gameLoop();
        }

        function getRandomFoodPosition() {
            return {
                x: Math.floor(Math.random() * (canvas.width / gridSize)) * gridSize,
                y: Math.floor(Math.random() * (canvas.height / gridSize)) * gridSize
            };
        }

        function drawRect(x, y, color) {
            ctx.fillStyle = color;
            ctx.fillRect(x, y, gridSize, gridSize);
            ctx.strokeStyle = "#fff";
            ctx.strokeRect(x, y, gridSize, gridSize);
        }

        function drawGame() {
            if (!running) return;
            ctx.clearRect(0, 0, canvas.width, canvas.height);
            snake.forEach(segment => drawRect(segment.x, segment.y, "green"));
            drawRect(food.x, food.y, "red");
        }

        function moveSnake() {
            if (!running) return;
            let head = { ...snake[0] };
            if (direction === "UP") head.y -= gridSize;
            if (direction === "DOWN") head.y += gridSize;
            if (direction === "LEFT") head.x -= gridSize;
            if (direction === "RIGHT") head.x += gridSize;

            if (head.x < 0 || head.x >= canvas.width || head.y < 0 || head.y >= canvas.height ||
                snake.some(segment => segment.x === head.x && segment.y === head.y)) {
                running = false;
                alert("遊戲結束！");
                return;
            }

            snake.unshift(head);
            if (head.x === food.x && head.y === food.y) {
                score += 10;
                document.getElementById("score").innerText = "分數: " + score;
                food = getRandomFoodPosition();
            } else {
                snake.pop();
            }
        }

        function changeDirection(event) {
            const key = event.key;
            if (key === "ArrowUp" && direction !== "DOWN") direction = "UP";
            if (key === "ArrowDown" && direction !== "UP") direction = "DOWN";
            if (key === "ArrowLeft" && direction !== "RIGHT") direction = "LEFT";
            if (key === "ArrowRight" && direction !== "LEFT") direction = "RIGHT";
        }

        function restartGame() {
            initGame();
        }

        document.addEventListener("keydown", changeDirection);

        function gameLoop() {
            if (!running) return;
            moveSnake();
            drawGame();
            if (running) setTimeout(gameLoop, 100);
        }

        initGame();
    </script>
</body>
</html>
